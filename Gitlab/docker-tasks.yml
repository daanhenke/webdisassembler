stages:
  - build
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_DEVELOPMENT_VERSION: $CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_VERSION: latest

.build-docker-container:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: build
  variables:
    PROJECT_NAME: ""
    CONTAINER_NAME: ""
    DOCKERFILE: "Docker/MassTransitService.Dockerfile"
  script:
    - docker build --pull -f $DOCKERFILE --build-arg PROJECT_NAME=$PROJECT_NAME -t $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_DEVELOPMENT_VERSION .
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_DEVELOPMENT_VERSION

.release-docker-container:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: release
  variables:
    PROJECT_NAME: ""
  script:
    - docker pull $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_DEVELOPMENT_VERSION
    - docker tag $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_DEVELOPMENT_VERSION $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_NAME:$CONTAINER_RELEASE_VERSION
  only:
    - master

deploy:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$DEPLOY_SSH_KEY"
    - cat "$DEPLOY_SSH_KEY"
    - ssh-add "$DEPLOY_SSH_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: deploy
  script:
    - docker compose -H "ssh://daan@daan.vodka" down --remove-orphans
    - docker compose -H "ssh://daan@daan.vodka" pull
    - docker compose -H "ssh://daan@daan.vodka" up -d
  only:
    - master
