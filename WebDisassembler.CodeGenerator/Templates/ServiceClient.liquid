{% for using in client.usings %}using {{ using }};
{% endfor %}
namespace WebDisassembler.ServiceProtocol.Clients;

public interface I{{ client.name }}ServiceClient
{
{% for method in client.methods %}    ValueTask<{{ method.name }}Response> {{ method.name }}({{ method.arguments_for_prototype }});{% endfor %}
}

public class {{ client.name }}ServiceClient : ServiceClientBase, I{{ client.name }}ServiceClient
{
    public {{ client.name }}ServiceClient(IScopedClientFactory clientFactory) : base(clientFactory) {}
    
{% for method in client.methods %}    public async ValueTask<{{ method.name }}Response> {{ method.name }}({{ method.arguments_for_prototype }}) => await SendRequest<{{ method.name }}Request, {{ method.name }}Response>(new({{ method.arguments_for_call }}));{% endfor %}
}