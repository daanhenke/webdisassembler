include:
  - local: 'Gitlab/docker-tasks.yml'

stages:
  - deploy
  - build
  - test
  - release



build-api:
  extends: .build-docker-container
  variables:
    PROJECT_NAME: "WebDisassembler.Api"
    CONTAINER_NAME: "api"
    DOCKERFILE: "Docker/AspNet.Dockerfile"

release-api:
  extends: .release-docker-container
  variables:
    CONTAINER_NAME: "api"

build-analyzer-service:
  extends: .build-docker-container
  variables:
    PROJECT_NAME: "WebDisassembler.Analyzer.Service"
    CONTAINER_NAME: "analyzer"

release-analyzer-service:
  extends: .release-docker-container
  variables:
    CONTAINER_NAME: "analyzer"

build-search-service:
  extends: .build-docker-container
  variables:
    PROJECT_NAME: "WebDisassembler.Search.Service"
    CONTAINER_NAME: "search"

release-search-service:
  extends: .release-docker-container
  variables:
    CONTAINER_NAME: "search"

build-reverse-proxy:
  extends: .build-docker-container
  variables:
    DOCKERFILE: "Docker/ReverseProxy/Dockerfile"
    CONTAINER_NAME: "reverse-proxy"

release-reverse-proxy:
  extends: .release-docker-container
  variables:
    CONTAINER_NAME: "reverse-proxy"

sonarqube-check:
  image: mcr.microsoft.com/dotnet/sdk:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "apt-get update"
      - "apt-get install --yes openjdk-11-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"daanhenke_web-disassembler_AYnUUCbj7APvbPlvc3vw\" /d:sonar.token=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.token=\"$SONAR_TOKEN\""
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
